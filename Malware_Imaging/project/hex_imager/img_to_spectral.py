# Standard Library Imports
import io
import os
import sys

# Conda Imports
import numpy as np
import cv2 as cv

# Project Defined Imports
from Malware_Imaging.config import IMAGE_DIRECTORIES, SPECTRAL_DIRECTORIES


def img_to_spectral():
    FILE_SIZE = [
        os.path.getsize(file) * 0.001
        for file in IMAGE_DIRECTORIES["MALWARE_DEC_IMAGES_PATHS"]
    ]
    TOTAL_SIZE = sum(FILE_SIZE)
    completed = 0
    for file, path, size in zip(
        IMAGE_DIRECTORIES["MALWARE_DEC_IMAGES_PATHS"],
        SPECTRAL_DIRECTORIES["SPECTRAL_IMAGE_PATHS"],
        FILE_SIZE,
    ):
        if not os.path.isfile(path):
            img = cv.imread(file, 0)
            dft = cv.dft(np.float32(img), flags=cv.DFT_COMPLEX_OUTPUT)
            dft_shift = np.fft.fftshift(dft)
            mag_spectrum_image = 20 * np.log(
                cv.magnitude(dft_shift[:, :, 0], dft_shift[:, :, 1])
            )
            cv.imwrite(path, mag_spectrum_image)
        completed += size
        done = int(50 * completed / TOTAL_SIZE)
        sys.stdout.write(
            "\r[{}{}] {}%".format(
                "â–ˆ" * done, "." * (50 - done), int(100 * completed / TOTAL_SIZE)
            )
        )
        sys.stdout.flush()
    sys.stdout.write("\n")
