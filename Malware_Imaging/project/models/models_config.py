# Standard Library Imports
from pprint import pprint

# Conda Imports
import pandas as pd
from sklearn.model_selection import train_test_split

# User Defined Imports
from Malware_Imaging.config import DATA_DIRECTORIES, IMAGE_DIRECTORIES

# Getting Stratified Random Sampling CSV to Align Images to their Labels
labels_df = pd.read_csv(DATA_DIRECTORIES["LABELS"])

# From the Dataframe Matching the Hash To the File Name Get Ordered List of Labels
image_labels = [
    (labels_df.loc[labels_df["hash"] == name]["family"].iloc[0])
    for name in IMAGE_DIRECTORIES["TARGET_FILE_NAMES"]
]

# Tying Image Paths To Their Labels and Convert to Dataframes
images = IMAGE_DIRECTORIES["MALWARE_DEC_IMAGES_PATHS"]
images_with_labels = pd.DataFrame(
    data=[(image, image_label) for image, image_label in zip(images, image_labels)],
    columns=["image_path", "family"],
)

"""

Here we are setting our defualts for test, train, and validate:
train: 60%
test: 20%
validate: 20%
the seed is set to 1 -- for reproduction
data is shuffled and stratified

"""
"""# Setting Defaults for Test Train Split
image_test_size = 0.20
image_val_size = 0.25
image_train_size = 0.80
split_seed = 1
data_shuffle = True
# Setting to None -- Scikit will Autmoatically Stratify
data_stratify = None

# Calling Scikit-Learn Splitter on Our DataFrame
X_train, X_test, y_train, y_test = train_test_split(
    images_with_labels["image_path"],
    images_with_labels["family"],
    test_size=image_test_size,
    train_size=image_train_size,
    random_state=split_seed,
    shuffle=data_shuffle,
    stratify=data_stratify,
)

X_train, X_val, y_train, y_val = train_test_split(
    X_train,
    y_train,
    test_size=0.25,
    train_size=image_train_size * 0.75,
    random_state=split_seed,
    shuffle=data_shuffle,
    stratify=data_stratify,
)

# Creating a Dictionary for easy importing into the models
TRAIN_TEST_VALIDATE = {
    "TRAIN": (X_train, y_train),
    "TEST": (X_test, y_test),
    "VAL": (X_val, y_val),
}"""

"""

Setting Our Image Sizing for Small Medium and Large

max pixel dim: 1024x32557 px
max pixel size: 33,338,368 px
median pixel dim: 1024x808 px
median pixel size: 827,392 px
min pixel dim: 64x49 px
min pixel size:: 3,136 px

compressed size to be floor(sqrt(3,136)) = 56x56 px
median size to be ceiling(sqrt(827,392)) = 910x910 px
expanded size to be ceiling(sqrt(33,338,368)) = 5,774x5,774 px

"""
DEFAULT_INPUT_SIZES = {"SMALL": (56, 56), "MEDIUM": (910, 810), "LARGE": (5774, 5774)}
