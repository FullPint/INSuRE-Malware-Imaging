# Standard Library Imports
from pprint import pprint

# Conda Imports
import pandas as pd
from sklearn.model_selection import train_test_split

# User Defined Imports
from Malware_Imaging.config import DATA_DIRECTORIES, IMAGE_DIRECTORIES

# Getting Stratified Random Sampling CSV to Align Images to their Labels
labels_df = pd.read_csv(DATA_DIRECTORIES["LABELS"])

# From the Dataframe Matching the Hash To the File Name Get Ordered List of Labels
image_labels = [
    (labels_df.loc[labels_df["hash"] == name]["family"].iloc[0])
    for name in IMAGE_DIRECTORIES["TARGET_FILE_NAMES"]
]

# Tying Image Paths To Their Labels and Convert to Dataframes
images = IMAGE_DIRECTORIES["MALWARE_DEC_IMAGES_PATHS"]
images_with_labels = pd.DataFrame(
    data=[(image, image_label) for image, image_label in zip(images, image_labels)],
    columns=["image_path", "family"],
)


# setting seed for splitting
image_test_size = 0.25
image_train_size = 0.75
split_seed = 1
data_shuffle = True
# Setting to None -- Scikit will Autmoatically Stratify
data_stratify = None

# Calling Scikit-Learn Splitter
X_train, X_test, y_train, y_test = train_test_split(
    images_with_labels["image_path"],
    images_with_labels["family"],
    test_size=image_test_size,
    train_size=image_train_size,
    random_state=split_seed,
    shuffle=data_shuffle,
    stratify=data_stratify,
)
