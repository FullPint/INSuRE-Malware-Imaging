# Standard Library Imports

# Conda Imports
from keras.preprocessing.image import ImageDataGenerator

# User Define Imports
from Malware_Imaging.project.models.models_config import (
    images_with_labels,
    DEFAULT_INPUT_SIZES,
)


class BaseGenerator:
    def __init__(self):

        self.image_data_frame = images_with_labels

        self.base_gen_settings = {
            # Set to false -- using ZCA wich will override
            "featurewise_center": False,
            # Set to false -- using ZCA wich will override
            "samplewise_center": False,
            # Set to false -- using ZCA wich will override
            "featurewise_std_normalization": False,
            # Set to false -- using ZCA wich will override
            "samplewise_std_normalization": False,
            # Setting to True Attempting To Highlight Patterns
            # May Set To False in the Future
            "zca_whitening": True,
            "zca_epsilon": 1e-06,
            # Set to Zero, The Domain Does not Expect Rotations
            "rotation_range": 0,
            # Setting Width and Height as Malware Might Have Changing Size
            # And We Horistically Defined Widths For Original Conversion
            # This Gives Some Lee-way
            "width_shift_range": 0.2,
            "height_shift_range": 0.2,
            # Dont Believe Brightness Range Should be Affected in our Domain
            "brightness_range": None,
            # Dont Believe Shear Range Should be Affected in our Domain
            "shear_range": 0.0,
            # Dont Zoom  Range Should be Affected in our Domain
            "zoom_range": 0.0,
            # Base is for Grayscale -- Leaving Alone
            "channel_shift_range": 0.0,
            # Lancoz is chosed as our interpolater but may change in the future
            "fill_mode": "lanczos",
            # Fill Mode is not Constant, Doesn't Matter
            "cval": 0.0,
            # Dont Believe Horizontal Flips Should be Affected in our Domain
            "horizontal_flip": False,
            # Dont Believe Vertiacal Flips Should be Affected in our Domain
            "vertical_flip": False,
            # Rescaling our values to be set bettween 0 and 1
            "rescale": (1.0 / 255),
            # Currently No Function Set
            "preprocessing_function": None,
            # Current format is already Default
            "data_format": None,
            # Already have a validation set
            "validation_split": 0.2,
            # Leaving as none dor now
            "dtype": None,
        }

        self.base_flow_settings = {
            "dataframe": self.image_data_frame,
            "directory": None,
            "x_col": "image_path",
            "y_col": "family",
            "target_size": (256, 256),
            "color_mode": "grayscale",
            "classes": None,
            "class_mode": "categorical",
            "batch_size": 32,
            "shuffle": True,
            "seed": 1,
            "save_to_dir": None,
            "save_prefix": "",
            "save_format": "png",
            "subset": "training",
            "interpolation": "lanczos",
            "drop_duplicates": True,
        }
        self.train_data_gen = ImageDataGenerator(**self.base_gen_settings)


class SmallGrayGenerator(BaseGenerator):
    def __init__(self):
        super()
        self.input_size = DEFAULT_INPUT_SIZES["SMALL"]
        self.train_flow_settings = __update_base_flow_settings()
        self.train_generator = super.train_data_gen.flow_from_dataframe(
            **self.train_flow_settings
        )

    def __update_base_flow_settings(self):
        settings = super.base_flow_settings
        settings["target_size"] = self.input_size
        return settings

    def get_train_gen(self):
        return self.train_generator
