# User Define Imports
from Malware_Imaging.project.models.models_config import images_with_labels


def get_simple_gray_settings(size):
    # Dictionary for gray settings of image generator
    gray_train_gen_settings = {
        # Set to false -- using ZCA wich will override
        "featurewise_center": False,
        # Set to false -- using ZCA wich will override
        "samplewise_center": False,
        # Set to false -- using ZCA wich will override
        "featurewise_std_normalization": False,
        # Set to false -- using ZCA wich will override
        "samplewise_std_normalization": False,
        # Setting to True Attempting To Highlight Patterns
        # May Set To False in the Future
        "zca_whitening": False,
        "zca_epsilon": 1e-06,
        # Set to Zero, The Domain Does not Expect Rotations
        "rotation_range": 0,
        # Setting Width and Height as Malware Might Have Changing Size
        # And We Horistically Defined Widths For Original Conversion
        # This Gives Some Lee-way
        "width_shift_range": 0.2,
        "height_shift_range": 0.2,
        # Dont Believe Brightness Range Should be Affected in our Domain
        "brightness_range": None,
        # Dont Believe Shear Range Should be Affected in our Domain
        "shear_range": 0.0,
        # Dont Zoom  Range Should be Affected in our Domain
        "zoom_range": 0.0,
        # gray is for Grayscale -- Leaving Alone
        "channel_shift_range": 0.0,
        # Lancoz is chosed as our interpolater but may change in the future
        "fill_mode": "nearest",
        # Fill Mode is not Constant, Doesn't Matter
        "cval": 0.0,
        # Dont Believe Horizontal Flips Should be Affected in our Domain
        "horizontal_flip": False,
        # Dont Believe Vertiacal Flips Should be Affected in our Domain
        "vertical_flip": False,
        # Rescaling our values to be set bettween 0 and 1
        "rescale": (1.0 / 255),
        # Currently No Function Set
        "preprocessing_function": None,
        # Current format is already Default
        "data_format": None,
        # 20%
        "validation_split": 0.2,
        # Leaving as none dor now
        "dtype": None,
    }

    gray_valid_gen_settings = {
        # Lancoz is chosed as our interpolater but may change in the future
        "fill_mode": "nearest",
        # Rescaling our values to be set bettween 0 and 1
        "rescale": (1.0 / 255),
        # Keeping constant
        "validation_split": 0.2,
    }

    # Dictionary for gray flow settings
    gray_train_flow_settings = {
        "dataframe": images_with_labels,
        "x_col": "image_path",
        "y_col": "family",
        "target_size": size[0:2],
        "color_mode": "grayscale",
        "classes": None,
        "class_mode": "categorical",
        "batch_size": 32,
        "shuffle": True,
        "seed": 1,
        "save_to_dir": None,
        "save_prefix": "",
        "save_format": "png",
        "subset": "training",
        "interpolation": "nearest",
        "drop_duplicates": True,
    }
    gray_valid_flow_settings = gray_train_flow_settings
    gray_valid_flow_settings["subset"] = "validation"
    return (
        gray_train_gen_settings,
        gray_valid_gen_settings,
        gray_train_flow_settings,
        gray_valid_flow_settings,
    )


def get_simple_parallel_gray_settings(size):
    # Dictionary for parallel_gray settings of image generator
    parallel_gray_train_gen_settings = {
        # Set to false -- using ZCA wich will override
        "featurewise_center": False,
        # Set to false -- using ZCA wich will override
        "samplewise_center": False,
        # Set to false -- using ZCA wich will override
        "featurewise_std_normalization": False,
        # Set to false -- using ZCA wich will override
        "samplewise_std_normalization": False,
        # Setting to True Attempting To Highlight Patterns
        # May Set To False in the Future
        "zca_whitening": False,
        "zca_epsilon": 1e-06,
        # Set to Zero, The Domain Does not Expect Rotations
        "rotation_range": 0,
        # Setting Width and Height as Malware Might Have Changing Size
        # And We Horistically Defined Widths For Original Conversion
        # This Gives Some Lee-way
        "width_shift_range": 0.2,
        "height_shift_range": 0.2,
        # Dont Believe Brightness Range Should be Affected in our Domain
        "brightness_range": None,
        # Dont Believe Shear Range Should be Affected in our Domain
        "shear_range": 0.0,
        # Dont Zoom  Range Should be Affected in our Domain
        "zoom_range": 0.0,
        # parallel_gray is for parallel_grayscale -- Leaving Alone
        "channel_shift_range": 0.0,
        # Lancoz is chosed as our interpolater but may change in the future
        "fill_mode": "nearest",
        # Fill Mode is not Constant, Doesn't Matter
        "cval": 0.0,
        # Dont Believe Horizontal Flips Should be Affected in our Domain
        "horizontal_flip": False,
        # Dont Believe Vertiacal Flips Should be Affected in our Domain
        "vertical_flip": False,
        # Rescaling our values to be set bettween 0 and 1
        "rescale": (1.0 / 255),
        # Currently No Function Set
        "preprocessing_function": None,
        # Current format is already Default
        "data_format": None,
        # 20%
        "validation_split": 0.2,
        # Leaving as none dor now
        "dtype": None,
    }

    parallel_gray_valid_gen_settings = {
        # Lancoz is chosed as our interpolater but may change in the future
        "fill_mode": "nearest",
        # Rescaling our values to be set bettween 0 and 1
        "rescale": (1.0 / 255),
        # Keeping constant
        "validation_split": 0.2,
    }

    # Dictionary for parallel_gray flow settings
    parallel_gray_train_flow_settings = {
        "dataframe": images_with_labels,
        "x_col": "image_path",
        "y_col": "family",
        "target_size": size[0:2],
        "color_mode": "grayscale",
        "classes": None,
        "class_mode": "categorical",
        "batch_size": 256,
        "shuffle": True,
        "seed": 1,
        "save_to_dir": None,
        "save_prefix": "",
        "save_format": "png",
        "subset": "training",
        "interpolation": "nearest",
        "drop_duplicates": True,
    }
    parallel_gray_valid_flow_settings = parallel_gray_train_flow_settings
    parallel_gray_valid_flow_settings["subset"] = "validation"
    return (
        parallel_gray_train_gen_settings,
        parallel_gray_valid_gen_settings,
        parallel_gray_train_flow_settings,
        gray_valid_flow_settings,
    )
